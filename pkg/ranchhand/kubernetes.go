package ranchhand

import (
	"os"
	"text/template"

	"github.com/pkg/errors"
)

const (
	rkeConfigFile = "rancher-cluster.yml"
	rkeTemplate   = `# DO NOT EDIT THIS - GENERATED BY RANCHHAND
ssh_key_path: {{ .SSHKeyPath }}
nodes:
{{- range .Nodes }}
  - address: {{ . }}
    user: {{ $.SSHUser }}
    port: {{ $.SSHPort }}
    role: [controlplane,worker,etcd]
{{- end }}

services:
  etcd:
    snapshot: true
    creation: 6h
    retention: 24h
`
)

var tpl *template.Template

func installKubernetes(cfg *Config) error {
	// generate rke config
	file, err := os.Create(rkeConfigFile)
	if err != nil {
		return errors.Wrapf(err, "cannot create %s", rkeConfigFile)
	}
	defer file.Close()

	if err := tpl.Execute(file, cfg); err != nil {
		return errors.Wrap(err, "rke template render failed")
	}

	// install rke

	// execute "rke up"
	//if buffer, err := exec.Command("rke", "up", "--config", rkeConfigFile).CombinedOutput(); err != nil {
	//	return errors.Wrapf(err, "cannot install kubernetes: %s", string(buffer))
	//}

	// check cluster health

	return nil
}

func init() {
	tpl = template.Must(template.New("rke-tmpl").Parse(rkeTemplate))
}
